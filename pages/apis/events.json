{
  "title": "ScratchPHP - Events",
  "template": "index",
  "data": {
    "content": "<h1>Events</h1>\n<p>Events are objects dispatched at various stages of the build process. You can listen to these events and respond with custom actions as needed.</p>\n<p>All event classes are namespaced under <code>Kenjiefx\\ScratchPHP\\App\\Events</code>.</p>\n<h3 id=\"pagebuildstartedevent\">PageBuildStartedEvent</h3>\n<p>Dispatched as soon as the page build process is started. Has 2 public methods:</p>\n<ul>\n<li><code>getName(): string</code> - returns the name of the page</li>\n<li><code>getPageModel(): PageModel</code> - returns data about the page</li>\n</ul>\n<h3 id=\"htmlbuildcompletedevent\">HTMLBuildCompletedEvent</h3>\n<p>Dispatched as soon as the page completed building the html. Has 4 public methods:</p>\n<ul>\n<li><code>getName(): string</code> - returns the name of the page</li>\n<li><code>getPage(): PageModel</code> - returns data about the page</li>\n<li><code>getContent(): string</code> - returns the rendered page html content</li>\n<li><code>updateContent(string $content): void</code> - updates the html content</li>\n</ul>\n<h3 id=\"cssbuildcompletedevent\">CSSBuildCompletedEvent</h3>\n<p>Dispatched as soon as the page completed building the css. Has 4 public methods:</p>\n<ul>\n<li><code>getName(): string</code> - returns the name of the page</li>\n<li><code>getPage(): PageModel</code> - returns data about the page</li>\n<li><code>getContent(): string</code> - returns the rendered page css content</li>\n<li><code>updateContent(string $content): void</code> - updates the css content</li>\n</ul>\n<h3 id=\"jsbuildcompletedevent\">JSBuildCompletedEvent</h3>\n<p>Dispatched as soon as the page completed building the javascript. Has 4 public methods:</p>\n<ul>\n<li><code>getName(): string</code> - returns the name of the page</li>\n<li><code>getPage(): PageModel</code> - returns data about the page</li>\n<li><code>getContent(): string</code> - returns the rendered page js content</li>\n<li><code>updateContent(string $content): void</code> - updates the js content</li>\n</ul>\n<h3 id=\"componethtmlcollectedevent\">ComponetHTMLCollectedEvent</h3>\n<p>Dispatched after the the component HTML is rendered. Has 6 methods:</p>\n<ul>\n<li><code>getName(): string</code> - returns the name of the Component</li>\n<li><code>getComponent(): ComponentModel</code> - returns data about the Component</li>\n<li><code>getContent(): string</code> - returns the rendered component content</li>\n<li><code>getComponentDir(): string</code> - returns the directory location of the component</li>\n<li><code>updateContent(string $content): void</code> - updates the content of the Component</li>\n<li><code>getData(): array</code> - returns the data passed to the component</li>\n</ul>\n<h3 id=\"componentcsscollectedevent\">ComponentCSSCollectedEvent</h3>\n<p>Dispatched after component CSS is retrieved. Has 5 methods:</p>\n<ul>\n<li><code>getName(): string</code> - returns the name of the Component</li>\n<li><code>getComponent(): ComponentModel</code> - returns data about the Component</li>\n<li><code>getContent(): string</code> - returns the rendered component content</li>\n<li><code>getComponentDir(): string</code> - returns the directory location of the component</li>\n<li><code>updateContent(string $content): void</code> - updates the content of the Component</li>\n</ul>\n<h3 id=\"componentjscollectedevent\">ComponentJSCollectedEvent</h3>\n<p>Dispatched after component CSS is retrieved. Has 5 methods:</p>\n<ul>\n<li><code>getName(): string</code> - returns the name of the Component</li>\n<li><code>getComponent(): ComponentModel</code> - returns data about the Component</li>\n<li><code>getContent(): string</code> - returns the rendered component content</li>\n<li><code>getComponentDir(): string</code> - returns the directory location of the component</li>\n<li><code>updateContent(string $content): void</code> - updates the content of the Component</li>\n</ul>\n<h3 id=\"blockcsscollectedevent\">BlockCSSCollectedEvent</h3>\n<p>Dispatched after block CSS is retrieved. Has 5 methods:</p>\n<ul>\n<li><code>getName(): string</code> - returns the name of the Block</li>\n<li><code>getBlock(): BlockModel</code> - returns data about the Block</li>\n<li><code>getContent(): string</code> - returns the rendered block content</li>\n<li><code>getgetBlockDir(): string</code> - returns the directory location of the block</li>\n<li><code>updateContent(string $content): void</code> - updates the content of the block</li>\n</ul>\n<h3 id=\"blockjscollectedevent\">BlockJSCollectedEvent</h3>\n<p>Dispatched after block CSS is retrieved. Has 5 methods:</p>\n<ul>\n<li><code>getName(): string</code> - returns the name of the Block</li>\n<li><code>getBlock(): BlockModel</code> - returns data about the Block</li>\n<li><code>getContent(): string</code> - returns the rendered block content</li>\n<li><code>getBlockDir(): string</code> - returns the directory location of the block</li>\n<li><code>updateContent(string $content): void</code> - updates the content of the block</li>\n</ul>\n",
    "updatedAt": 1752570715084
  }
}