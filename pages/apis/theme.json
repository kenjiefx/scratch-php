{
  "title": "Theme API",
  "template": "index",
  "data": {
    "content": "<h1>Theme API</h1>\n<h3 id=\"template_content\">Template Content</h3>\n<p>Renders the main content of the page based on the associated Page JSON configuration. This function should be called where you want the page's body content to appear.</p>\n<pre><code class=\"language-php\">&lt;?php template_content(); ?&gt;\n</code></pre>\n<h3 id=\"template_assets\">Template Assets</h3>\n<p>Injects the necessary CSS and JavaScript files used by the current theme. Typically placed within the <code>&lt;head&gt;</code> section of your HTML layout.</p>\n<pre><code class=\"language-php\">&lt;?php template_assets(); ?&gt;\n</code></pre>\n<h3 id=\"page_title\">Page Title</h3>\n<p>Outputs the title of the page, as defined in the Page JSON configuration. Commonly used inside the <code>&lt;title&gt;</code> tag of the HTML document.</p>\n<pre><code class=\"language-php\">&lt;?php page_title(); ?&gt;\n</code></pre>\n<h3 id=\"page_data\">Page Data</h3>\n<p>Retrieves a specific piece of custom data from the Page JSON configuration. Accepts a single parameter:</p>\n<ul>\n<li><code>string $field</code> — the key corresponding to the desired value in the Page JSON.</li>\n</ul>\n<pre><code class=\"language-php\">&lt;?php page_data('layoutType'); ?&gt;\n</code></pre>\n<h3 id=\"base_url\">Base URL</h3>\n<p>Returns the base URL of the site, as defined in the ScratchJSON configuration file or via the CLI parameter <code>--baseUrl=</code>. Useful for constructing absolute paths to resources.</p>\n<pre><code class=\"language-php\">&lt;?php base_url(); ?&gt;\n</code></pre>\n<h3 id=\"component\">Component</h3>\n<p>Renders a reusable component. Accepts two parameters:</p>\n<ul>\n<li><code>string $name</code> — the relative path to the component file within the <code>components</code> directory (supports nested paths).</li>\n<li><code>array $data</code> — an optional associative array of data passed to the component.</li>\n</ul>\n<p>Example:</p>\n<pre><code class=\"language-php\">&lt;?php component(&quot;Forms\\\\LoginForm&quot;); ?&gt;\n</code></pre>\n<h3 id=\"block\">Block</h3>\n<p>Includes and renders a block file. Accepts two parameters:</p>\n<ul>\n<li><code>string $name</code> — the relative path to the block file.</li>\n<li><code>array $data</code> — an optional associative array of data passed to the block.</li>\n</ul>\n<pre><code class=\"language-php\">&lt;?php block(&quot;FormElements\\\\Input&quot;); ?&gt;\n</code></pre>\n<h3 id=\"snippet\">Snippet</h3>\n<p>Includes and renders a snippet file. Accepts the same parameters as <code>block()</code>:</p>\n<ul>\n<li><code>string $name</code> — the relative path to the snippet file.</li>\n<li><code>array $data</code> — an optional associative array of data passed to the snippet.</li>\n</ul>\n<pre><code class=\"language-php\">&lt;?php snippet(&quot;FormElements\\\\Input&quot;); ?&gt;\n</code></pre>\n<h3 id=\"asset_links\">Asset Links</h3>\n<p>Generates a URL to an asset located in the <code>&lt;theme_dir&gt;/assets</code> directory. Use this to reference images, icons, scripts, etc.</p>\n<pre><code class=\"language-php\">&lt;?php asset('favicon.ico'); ?&gt;\n</code></pre>\n",
    "updatedAt": 1752498129585
  }
}